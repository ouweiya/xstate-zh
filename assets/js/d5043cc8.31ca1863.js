"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[8967],{39114:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>h,toc:()=>l});var a=s(85893),n=s(11151);const i={title:"History states"},r=void 0,h={id:"history-states",title:"History states",description:"A history state is a special type of state (a pseudostate) that remembers the last child state that was active before its parent state is exited. When a transition from outside the parent state targets a history state, the remembered child state is entered.",source:"@site/docs/history-states.mdx",sourceDirName:".",slug:"/history-states",permalink:"/xstate-zh/docs/history-states",draft:!1,unlisted:!1,editUrl:"https://github.com/statelyai/docs/tree/main/docs/history-states.mdx",tags:[],version:"current",frontMatter:{title:"History states"},sidebar:"tutorialSidebar",previous:{title:"Final states",permalink:"/xstate-zh/docs/final-states"},next:{title:"Persistence",permalink:"/xstate-zh/docs/persistence"}},o={},l=[{value:"Shallow vs. deep history",id:"shallow-vs-deep-history",level:2},{value:"History target",id:"history-target",level:2},{value:"History states cheatsheet",id:"history-states-cheatsheet",level:2},{value:"Cheatsheet: create a history state (shallow by default)",id:"cheatsheet-create-a-history-state-shallow-by-default",level:3},{value:"Cheatsheet: create a deep history state",id:"cheatsheet-create-a-deep-history-state",level:3},{value:"Cheatsheet: create a history state with a target",id:"cheatsheet-create-a-history-state-with-a-target",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["A history state is a special type of state (a ",(0,a.jsx)(t.em,{children:"pseudostate"}),") that remembers the last ",(0,a.jsx)(t.a,{href:"/xstate-zh/docs/parent-states",children:"child state"})," that was active before its parent state is exited. When a transition from outside the parent state targets a history state, the remembered child state is entered."]}),"\n",(0,a.jsx)(t.p,{children:'This allows machines to "remember" where they left off when exiting and reentering a parent state.'}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["If no child state remembered, history goes to ",(0,a.jsx)(t.code,{children:".target"})," state, if it is specified"]}),"\n",(0,a.jsxs)(t.li,{children:["Otherwise, go to ",(0,a.jsx)(t.a,{href:"/xstate-zh/docs/initial-states",children:"initial state"})]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["A history state returns the parent state to its most recently active child state. The box with an ",(0,a.jsx)(t.strong,{children:"H"})," inside represents the history state."]}),"\n",(0,a.jsx)(t.p,{children:"The history state can be deep or shallow:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"A shallow history state remembers the immediate child\u2019s state."}),"\n",(0,a.jsx)(t.li,{children:"A deep history state remembers the deepest active state or states inside its child states."}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const checkoutMachine = createMachine({\n  // ...\n  states: {\n    payment: {\n      initial: 'card',\n      states: {\n        card: {},\n        paypal: {},\n        // highlight-next-line\n        hist: { type: 'history' },\n      },\n    },\n    address: {\n      on: {\n        back: {\n          target: 'payment.hist',\n        },\n      },\n    },\n  },\n});\n"})}),"\n",(0,a.jsx)(t.h2,{id:"shallow-vs-deep-history",children:"Shallow vs. deep history"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Shallow history states only remember the last active direct child state."}),"\n",(0,a.jsx)(t.li,{children:"Deep history states remember all active descendant states."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"history-target",children:"History target"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Normally, history states target the most recent child state of its parent state"}),"\n",(0,a.jsx)(t.li,{children:"If the history state is entered but the parent state was never visited, the parent's initial state is entered."}),"\n",(0,a.jsxs)(t.li,{children:["However, you can add a ",(0,a.jsx)(t.code,{children:"target: 'childKey'"})," to specify the default child state that should be entered"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"history-states-cheatsheet",children:"History states cheatsheet"}),"\n",(0,a.jsx)(t.h3,{id:"cheatsheet-create-a-history-state-shallow-by-default",children:"Cheatsheet: create a history state (shallow by default)"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const machine = createMachine({\n  // ...\n  states: {\n    hist: { type: 'history' },\n    firstState: {},\n    someState: {},\n    anotherState: {},\n  },\n});\n"})}),"\n",(0,a.jsx)(t.h3,{id:"cheatsheet-create-a-deep-history-state",children:"Cheatsheet: create a deep history state"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const machine = createMachine({\n  // ...\n  states: {\n    hist: {\n      type: 'history',\n      history: 'deep',\n    },\n    firstState: {},\n    someState: {},\n    anotherState: {},\n  },\n});\n"})}),"\n",(0,a.jsx)(t.h3,{id:"cheatsheet-create-a-history-state-with-a-target",children:"Cheatsheet: create a history state with a target"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const machine = createMachine({\n  // ...\n  initialState: 'firstState',\n  states: {\n    hist: {\n      type: 'history',\n      target: 'someState',\n    },\n    firstState: {},\n    someState: {},\n    anotherState: {},\n  },\n});\n"})})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>h,a:()=>r});var a=s(67294);const n={},i=a.createContext(n);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);